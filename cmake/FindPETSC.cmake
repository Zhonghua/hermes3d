#
# petsc
#

FIND_PATH(PETSC_INCLUDE_DIR petsc.h ${PETSC_ROOT}/include)

if(EXISTS ${PETSC_ROOT}/lib/${PETSC_ARCH})
    # PETSC 2.x
	SET(PETSC_LIB_DIR ${PETSC_ROOT}/lib/${PETSC_ARCH})
	FIND_LIBRARY(PETSC_LIBRARY petsc ${PETSC_LIB_DIR})
	SET(TMP_INC_DIR		
		${PETSC_ROOT}/bmake/${PETSC_ARCH}
		${PETSC_ROOT}/include/mpiuni
    )	
else(EXISTS ${PETSC_ROOT}/lib/${PETSC_ARCH})
    # PETSc 3.0 
	SET(PETSC_LIB_DIR ${PETSC_ROOT}/${PETSC_ARCH}/lib)
	FIND_LIBRARY(PETSC_LIBRARY petsc ${PETSC_LIB_DIR})
	SET(TMP_INC_DIR
	    ${PETSC_ROOT}/${PETSC_ARCH}/include
		${PETSC_ROOT}/include/mpiuni
    )	
endif(EXISTS ${PETSC_ROOT}/lib/${PETSC_ARCH})

IF (PETSC_INCLUDE_DIR AND PETSC_LIBRARY)
   SET(PETSC_FOUND TRUE)
ENDIF (PETSC_INCLUDE_DIR AND PETSC_LIBRARY)


IF (PETSC_FOUND)
	IF (NOT PETSC_FIND_QUIETLY)
		MESSAGE(STATUS "Found PETSc: ${PETSC_LIBRARY}")
	ENDIF (NOT PETSC_FIND_QUIETLY)
	SET(PETSC_INCLUDE_DIRS ${PETSC_INCLUDE_DIR} ${TMP_INC_DIR})	
	# libs has to be in this order
	FOREACH(L petscts petscsnes petscksp petscdm petscmat petscvec petsc mpiuni)
		SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_LIB_DIR}/lib${L}.a)
	ENDFOREACH(L)
	SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} dl)
ELSE (PETSC_FOUND)
	IF (PETSC_FIND_REQUIRED)
		MESSAGE(FATAL_ERROR "Could not find PETSc")
	ENDIF (PETSC_FIND_REQUIRED)
ENDIF (PETSC_FOUND)

SET(TMP_INC_DIR)
