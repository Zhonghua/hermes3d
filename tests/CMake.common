# !!! Keep the order of packages and libraries unless linking would be broken !!!
# !!! Do NOT edit the lines below UNLESS you are REALLY SURE what you are doing !!!
#

# Judy
find_package(JUDY REQUIRED)
if(JUDY_FOUND)
	set(TESTS_INCLUDE_DIRS ${TESTS_INCLUDE_DIR} ${JUDY_INCLUDE_DIR})
	set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${JUDY_LIBRARY}) 
endif(JUDY_FOUND)

# HDF5
if(USE_HDF5)
	find_package(HDF5 REQUIRED)
	if(HDF5_FOUND)
		set(TESTS_INCLUDE_DIRS ${TESTS_INCLUDE_DIR} ${HDF5_INCLUDE_DIR})
		set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${HDF5_LIBRARY})

		find_package(ZLIB REQUIRED)
		if(ZLIB_FOUND)
			set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${ZLIB_LIBRARY})
		endif(ZLIB_FOUND)
	endif(HDF5_FOUND)
endif(USE_HDF5)

# UMFPACK
if(USE_UMFPACK)
	find_package(UMFPACK REQUIRED)
	if(UMFPACK_FOUND)
		set(TESTS_INCLUDE_DIRS ${TESTS_INCLUDE_DIR} 
			${UFCONFIG_INCLUDE_DIR}
			${UMFPACK_INCLUDE_DIR}
			${AMD_INCLUDE_DIR}
		)
		set(TESTS_LIBRARIES ${TESTS_LIBRARIES}
			${UMFPACK_LIBRARY}
			${AMD_LIBRARY}
		)
	endif(UMFPACK_FOUND)
endif(USE_UMFPACK)

# PARDISO
if(USE_PARDISO)
	find_package(PARDISO REQUIRED)
	if (PARDISO_FOUND)
		set(TESTS_LIBRARIES ${TESTS_LIBRARIES}
			${PARDISO_LIBRARY}
		)
	endif(PARDISO_FOUND)
endif(USE_PARDISO)

# PETSc
if(USE_PETSC)
	find_package(PETSC REQUIRED)
	if(PETSC_FOUND)
		set(TESTS_INCLUDE_DIRS ${TESTS_INCLUDE_DIR} ${PETSC_INCLUDE_DIRS})
		set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${PETSC_LIBRARIES})

		# X11 (stupid PETSc is linked against X11 - can we avoid this?)
		find_package(X11 REQUIRED)
		if(X11_FOUND)
			set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${X11_LIBRARY} dl Xau Xdmcp)
		endif(X11_FOUND)
	endif(PETSC_FOUND)
endif(USE_PETSC)

# need at least one lienar solver
if(NOT USE_PETSC AND NOT USE_UMFPACK AND NOT USE_PARDISO)
	message(FATAL_ERROR "Tests: You need to specify at least one linear solver library in global CMake.vars")
endif(NOT USE_PETSC AND NOT USE_UMFPACK AND NOT USE_PARDISO)

#
# LAPACK, BLAS packages
#

# ACML
if(USE_ACML)
	find_package(ACML REQUIRED)
	if(ACML_FOUND)
		set(TESTS_INCLUDE_DIRS ${TESTS_INCLUDE_DIR} ${ACML_INCLUDE_DIR})
		set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${ACML_LIBRARY})
	endif(ACML_FOUND)
endif(USE_ACML)

if(USE_BLAS)
	find_package(BLAS REQUIRED)
	if(BLAS_FOUND)
		set(TESTS_INCLUDE_DIRS ${TESTS_INCLUDE_DIR} ${BLAS_INCLUDE_DIR})
		set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${BLAS_LIBRARY})
	endif(BLAS_FOUND)
endif(USE_BLAS)

if(USE_LAPACK)
	find_package(LAPACK REQUIRED)
	if(LAPACK_FOUND)
		set(TESTS_INCLUDE_DIRS ${TESTS_INCLUDE_DIR} ${LAPACK_INCLUDE_DIR})
		set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${LAPACK_LIBRARY})
	endif(LAPACK_FOUND)
endif(USE_LAPACK)

#
# GLUT
#
if(USE_GLUT)
	find_package(GLUT REQUIRED)
	if(GLUT_FOUND)
		set(TESTS_INCLUDE_DIRS ${TESTS_INCLUDE_DIR} ${GLUT_INCLUDE_DIR})
		set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${GLUT_LIBRARY})
	endif(GLUT_FOUND)
endif(USE_GLUT)

#
# Fortran
#
if(USE_FORTRAN)
	find_package(FORTRAN REQUIRED)
	if(FORTRAN_FOUND)
		set(TESTS_INCLUDE_DIRS ${TESTS_INCLUDE_DIR} ${FORTRAN_INCLUDE_DIR})
		set(TESTS_LIBRARIES ${TESTS_LIBRARIES} ${FORTRAN_LIBRARY})
	endif(FORTRAN_FOUND)
endif(USE_FORTRAN)
